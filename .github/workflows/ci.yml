on:
  push:
    tags-ignore:
      - 'v*'
    paths-ignore:
      - test/**
    branches:
      - master
      - main
  pull_request:
    branches: [master]
name: CI

jobs:
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            innei/mx-server
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy .env
        run: |
          cp .env.example .env
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }},innei/mx-server:latest
          labels: ${{ steps.meta.outputs.labels }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: |
          bash ./scripts/workflow/test-docker.sh
          sudo rm -rf ./data

  core:
    name: Build (Core)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.x
          run_install: false
      - name: Install Dependencies
        run: |
          pnpm i --no-optional
      - name: Build project
        run: |
          npm run bundle
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1.10.0
        with:
          mongodb-version: 4.4
      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 6
      - name: Test Bundle Server
        run: |
          bash scripts/workflow/test-server.sh
  test:
    name: Node.js Test CI
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.x
          run_install: false
      - name: Install Dependencies
        run: |
          pnpm i
      - name: Run Lint
        run: |
          npm run lint

      - name: Run Tests
        run: |
          npm run test

        env:
          CI: true
