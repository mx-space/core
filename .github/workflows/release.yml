on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  build:
    name: Upload Release Asset
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 4.4
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 6
      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true
      - name: Test
        run: |
          npm run lint
          npm run test
          npm run test:e2e

      - name: Build project
        run: |
          pnpm run bundle
      - name: Test Bundle Server
        run: |
          bash scripts/workflow/test-server.sh
      - name: Zip Assets
        run: |
          sh scripts/zip-asset.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release-${{ matrix.os }}.zip
          asset_content_type: application/zip
  deploy:
    name: Deploy To Remote Server
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Exec deploy script with SSH
        uses: appleboy/ssh-action@master
        env:
          JWTSECRET: ${{ secrets.JWTSECRET }}
        with:
          command_timeout: 10m
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          envs: JWTSECRET
          script_stop: true
          script: |
            whoami
            cd
            source ~/.zshrc
            cd mx
            ls -a
            node server-deploy.js --jwtSecret=$JWTSECRET

  build_other_platform:
    name: Build Other Platform
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true
      - name: Build project
        run: |
          pnpm run bundle
      - name: Zip Assets
        run: |
          sh scripts/zip-asset.sh
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.release_url }}
          asset_path: ./release.zip
          asset_name: release-${{ matrix.os }}.zip
          asset_content_type: application/zip
